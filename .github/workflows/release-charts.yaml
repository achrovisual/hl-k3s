name: Release Helm Charts

on:
  push:
    branches:
      - main

jobs:
  publish-charts:
    name: Publish Charts and Create Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.9.0

      - name: Add External Helm Repositories
        run: |
          helm repo add argo-helm https://argoproj.github.io/argo-helm
          helm repo add metallb https://metallb.github.io/metallb
          helm repo add opentelemetry-helm-charts https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo add hl-k3s https://achrovisual.github.io/hl-k3s

      - name: Set Target Chart Environment Variable
        run: echo "TARGET_CHARTS=base-template" >> "$GITHUB_ENV"

      - name: Get Chart Version from Chart.yaml
        id: get_chart_version
        run: |
          CHART_VERSION=$(grep '^\s*version:' charts/public/base-template/Chart.yaml | awk '{print $2}')
          echo "Detected chart version: $CHART_VERSION"
          echo "CHART_VERSION=$CHART_VERSION" >> "$GITHUB_ENV"

      - name: Extract Changelog Content for Current Version
        id: extract_changelog
        run: |
          CHANGELOG_FILE="charts/public/base-template/CHANGELOG.md"
          
          if [ ! -f "$CHANGELOG_FILE" ]; then
            echo "::error file=$CHANGELOG_FILE::CHANGELOG.md not found at $CHANGELOG_FILE"
            exit 1
          fi

          CHANGELOG_CONTENT=$(awk -v version="${{ env.CHART_VERSION }}" '
            /^## \[/ {
              if (found_version) { exit }
              if ($0 ~ "## \\[" version "\\]") {
                found_version = 1
                next
              }
            }
            found_version { print }
          ' "$CHANGELOG_FILE")

          CHANGELOG_CONTENT=$(echo "$CHANGELOG_CONTENT" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

          if [ -z "$CHANGELOG_CONTENT" ]; then
            echo "::warning::No specific changelog content found for version ${{ env.CHART_VERSION }} in $CHANGELOG_FILE. Using a fallback message."
            echo "release_notes=Release of chart version ${{ env.CHART_VERSION }}" >> "$GITHUB_OUTPUT"
          else
            echo "$CHANGELOG_CONTENT" > release_notes.txt
            echo "release_notes_file=release_notes.txt" >> "$GITHUB_OUTPUT"
          fi

      - name: Run Chart Releaser Action
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: charts/public
          release_notes: ${{ steps.extract_changelog.outputs.release_notes }}
          release_notes_file: ${{ steps.extract_changelog.outputs.release_notes_file }}
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Charts to GHCR
        shell: bash
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              echo "No chart packages found to push."
              break
            fi
            echo "Pushing chart package: ${pkg}"
            helm push "${pkg}" "oci://ghcr.io/${GITHUB_REPOSITORY}"
          done
