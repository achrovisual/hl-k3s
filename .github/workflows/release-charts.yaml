name: Release Helm Charts

on:
  push:
    branches:
      - main

jobs:
  publish-charts:
    name: Publish Charts and Create Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.9.0

      - name: Add External Helm Repositories
        run: |
          helm repo add argo-helm https://argoproj.github.io/argo-helm
          helm repo add metallb https://metallb.github.io/metallb
          helm repo add opentelemetry-helm-charts https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo add hl-k3s https://achrovisual.github.io/hl-k3s

      - name: Set Target Chart Environment Variable
        run: echo "TARGET_CHARTS=base-template" >> "$GITHUB_ENV"

      - name: Check for changes in charts/public
        id: check_changes
        run: |
          if git diff --name-only ${{ github.sha }} HEAD -- charts/public | grep . ; then
            echo "Changes detected in charts/public"
            HAS_CHANGES=true
          else
            echo "No changes detected in charts/public"
            HAS_CHANGES=false
          fi

      - name: Run Chart Releaser Action
        if: steps.check_changes.outputs.HAS_CHANGES == 'true'
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: charts/public
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NOTES_FILE: ${{ steps.extract_changelog.outputs.release_notes_file }}
      
      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Charts to GHCR
        if: steps.check_changes.outputs.HAS_CHANGES == 'true'
        shell: bash
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              echo "No chart packages found to push."
              break
            fi
            echo "Pushing chart package: ${pkg}"
            helm push "${pkg}" "oci://ghcr.io/${GITHUB_REPOSITORY}"
          done
