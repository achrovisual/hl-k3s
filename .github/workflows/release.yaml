name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Create gh-pages branch if it doesn't exist
        continue-on-error: true
        run: |
          git checkout -b gh-pages || exit 1
          git rm -rf . 
          git commit --allow-empty -m "Create empty gh-pages branch"
          git push origin gh-pages --force

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.9.0

      - name: Add Helm Repositories
        run: |
          helm repo add argo-helm https://argoproj.github.io/argo-helm
          helm repo add metallb https://metallb.github.io/metallb
          helm repo add opentelemetry-helm-charts https://open-telemetry.github.io/opentelemetry-helm-charts

      - name: Set Target Charts
        run: echo "TARGET_CHARTS=base-template" >> $GITHUB_ENV

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_GENERATE_RELEASE_NOTES: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Target Charts to GHCR
        run: |
          shopt -s nullglob
          TARGET_CHARTS="${{ env.TARGET_CHARTS }}"
          for pkg in .cr-release-packages/*; do
            chart_name=$(basename "$pkg")
            if [[ ",${TARGET_CHARTS}," == *",$chart_name,"* ]]; then
              helm push "${pkg}" "oci://ghcr.io/${GITHUB_REPOSITORY}"
            fi
          done

      - name: Cleanup Non-Target Packages
        run: |
          shopt -s nullglob
          TARGET_CHARTS="${{ env.TARGET_CHARTS }}"
          for pkg in .cr-release-packages/*; do
            chart_name=$(basename "$pkg")
            if [[ ",${TARGET_CHARTS}," != *",$chart_name,"* ]]; then
              rm -rf "$pkg"
            fi
          done